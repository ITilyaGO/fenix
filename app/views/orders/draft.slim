- abl_view = @sections.map{|s|can_view_section?(:sections, :draft, s.ix) ? s.ix : nil }
- kc_os = KSM::OrderStatus.find_all(@orders.map(&:id))
- reveals = []
- @orders.each do |order|
  - os = kc_os.detect{|kc|kc.id.to_i == order.id} || KSM::OrderStatus.new(id: order.id)
  - next if (abl_view & os.pstate.keys).empty?
  - reveals << order

- price_total = my_total_sum_for @orders
- all_ids = @orders.map(&:id)
- sec_sums = sum_by_sections(all_ids)
.timeline: .summary
  - by_deli = my_sum_by_delivery(@orders)
  - [:postage, :vernissage, :roundtrip, :pickup].each do |ds|
    - if by_deli[ds] > 0
      .item-orders.pull-left
        span = t :"delivery.#{ds.to_s}"
        .rpr == deli(rur by_deli[ds])

  .pull-left
  - sections = KSM::Section.all
  - sections.each do |s|
    - next unless can_view_section?(:sections, :sum, s.ix)
    - sec_sum = sec_sums.fetch(s.ix, 0)
    - if sec_sum > 0
      .item-all.pull-left
        span = s.name
        .rpr == deli(rur sec_sum)

  .item-all.pull-right
    span Сумма заказов
    .rpr == deli(rur price_total)

.tabs-content
  table#list.table.table-hover.table-condensed
    thead
      tr
        th class='header list-menu non-print'
        th class='header' Номер
        th.header: .hidden-md.hidden-lg Доставка
        th.header.text-center Дата
        th class='header' Город
        th class='header' Заказчик
        th.header.non-print.text-center Стадии
        th.header Менеджер
        th.header
        th class='header non-print'
          = partial 'bricks/orders/section_titles'
        th class='header non-print'
        th class='header list-row-action-header non-print'
          ' Всего:
          rowsummer target='#list'
    
    tbody
      - reveals.each do |order|
        - os = kc_os.detect{|kc|kc.id.to_i == order.id} || KSM::OrderStatus.new(id: order.id)
        tr class='list-row' data-id=order.id
          td class='list-column list-selectable non-print' = check_box_tag 'order_ids[]', :autocomplete => "off", :value => order.id, :class => 'list-selectable-checkbox'
          td class='list-column'
            = link_to order.id, :href => url(:orders, :edit, :id => order.id)
          td.list-column
            = tja :delivery, order.delivery
            | &nbsp;&nbsp;
          td.list-column.text-nowrap.text-center = to_dm(order.created_at)
          td class='list-column'
            - code = @kc_orders[order.id.to_s]
            - town_name = @kc_towns[code]&.model
            = partial 'bricks/kato/label', :locals => { town_name: town_name, el: order }
          
          td class='list-column' = order.client&.name
          td.list-column.non-print.switches.text-nowrap
            draftswitches items=dfsmax locale=dfsru bw=os.draftbw order=order.id allow='change'
          td.list-column.text-center
            = order.client&.manager&.name
            - unless order.client&.manager_id
              .fa.fa-briefcase.text-danger
          td.list-column.minirur.text-nowrap == deli rur ((my_order_total order)/1000.0).floor
          / td.list-column.non-print
            /span.label class="label-#{os.state}" = t :"status.#{os.state}"
          td class='list-column text-nowrap non-print'
            = partial 'orders/squares', :locals => { :order => order, status: os }
          td class='list-column non-print'
            - if order.draft?
              = hidden_field_tag 'tid[]', :value => order.id
              .btn.btn-xs.btn-anew.list-menu-draft-link = t 'action.confirm'
          td class='list-column list-row-action non-print'
            .list-row-action-wrapper
              .list-row-action-wrapper-link &nbsp;
              - if allow_route?(:orders_create)
                = link_to tag_icon(:paw), :rel => :tooltip, :title => "Edit order", :href => url(:orders, :correct, :id => order.id), :class => 'list-row-action-wrapper-link'
              - if order.draft? && can_view?(:order, :modify)
                = link_to tag_icon(:save), :href => url(:c1c, :create, :id => order.id), :class => 'list-row-action-wrapper-link'
              - if current_account.is_admin?
                = link_to tag_icon("trash-o"), :rel => :tooltip, :title => "#{pat(:delete)} order", :class => 'list-row-action-delete-one list-row-action-wrapper-link'
            div class='modal'
              div class="modal-dialog"
                div class='modal-content'
                  div class="modal-header"
                    h4 class="modal-title" We gonna delete this item
                  div class='modal-body'
                    p Точно удалить?
                  div class='modal-footer'
                    = form_tag url(:orders, :destroy, :id => order.id), :method => :delete do
                      = submit_tag pat(:delete), :class =>'list-row-action-popover-delete-one-btn btn btn-danger btn-wide'
                      div class='btn btn-default btn-wide cancel' data-dismiss="modal" = pat(:cancel)

.modal#draft-modal
  .modal-dialog style='width: 90% !important;'
    .modal-content
      = form_tag url(:orders, :anew), :method => :put do
        .modal-header.flex-c
          h4.modal-title Назначаем дату
          .flexie
          stickamount
          .flexie
          - if can_view?(:sys, :prefs)
            = link_to 'Настройки', url(:timeline, :stickdays) if can_view?(:sys, :editors)
        .modal-body
          = hidden_field_tag :oid
          = hidden_field_tag :timeline_at
          = partial 'timeline/calendar_stick'
        .modal-footer
          .btn.btn-success.btn-wide.submit Подтвердить
          .btn.btn-default.btn-wide.cancel data-dismiss="modal" = pat(:cancel)

- content_for :js_assets do
  javascript:
    (function($) {
        $(".list-menu-draft-link").on("click", function(e) {
          $('#calendar').toggleClass('collapse')
          $("#draft-modal").modal()
          var oid = this.previousElementSibling.value
          rcontrol.trigger('LOAD_STICKER_AMOUNT', +oid)
          $('#draft-modal input[name=oid]').val(oid)
        })

        $('#draft-modal').on('hidden.bs.modal', function (e) {
          $('#calendar .day').removeClass('selected')
          $('#calendar').toggleClass('collapse')
        })
        $("#calendar").on("click", ".day", function() {
          var day = $(this);
          let inp = $('input[name="timeline_at"]')
          inp.val($('input', day).val())
          $('#calendar .day').removeClass('selected')
          day.toggleClass('selected')
          let oid = $('#draft-modal input[name=oid]').val()
          rcontrol.trigger('PREVIEW_STICKER_DATE', +oid, $('input', day).val())
        })
        
        $('#draft-modal .submit').on('click', function (e) {
          id = $('#draft-modal input[name=oid]').val()
          at = $('#draft-modal input[name=timeline_at]').val()
          f = document.querySelector('#draft-modal form')
          fetch(f.action, {
            method: 'put',
            body: 'id=' + id + '&timeline_at=' + at + "&authenticity_token=" + encodeURIComponent(document.querySelector("form [name^=auth]").value),
            headers: { "Content-Type": "application/x-www-form-urlencoded" }
          })
          .then(response => response.json())
          .then(function(result) {
            $('#draft-modal').modal('hide')
            if (!result.error) $("tr[data-id=" + id + "]").fadeOut()
            document.location = '/orders/edit/' + id 
          })
        })
    })(jQuery)

  = javascript_include_tag :riot, :appa
  rscript type="riot/tag" src="/riot/tags/idcollapser.tag"
  rscript type="riot/tag" src="/riot/tags/subclick.tag"
  rscript type="riot/tag" src="/riot/tags/switcher.tag"
  rscript type="riot/tag" src="/riot/tags/elhide.tag"
  rscript type="riot/tag" src="/riot/tags/draft_switches.tag"
  rscript type="riot/tag" src="/riot/tags/rowsummer.tag"
  rscript type="riot/tag" src="/riot/tags/timeline/stickamount.tag"

  javascript:
    
    document.addEventListener("DOMContentLoaded", function(event) {
      riot.mount('idcollapser, subclick, switcher, draftswitches, elhide, rowsummer, stickamount')
    })
    let confobj = #{{@squadconf.to_json}}
    rsquad.saveConfig(confobj)
