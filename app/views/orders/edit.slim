- cplx = order_cplx(@order.id)
- sticker = order_sticker(@order.id)
ul class="nav nav-tabs non-print"
  li = link_to tag_icon(:list, pat(:list)), url(:orders, :index)
  li class="active" = link_to tag_icon(:edit, "Show order #{@order.id}"), url(:orders, :show, :id => @order.id)
  li = link_to '#' do
    span class="label label-#{@order.status}"
      = t :"status.#{@order.status}"
  li = link_to '#' do
    ' сложность
    .label.label-info = cplx
  li = link_to '#' do
    ' клейка
    .label.label-darkrose == rur(sticker.first)
    - if sticker.last > 0
      ' &nbsp;
      .label.label-purple == rur(sticker.last)
  li
    .progress.for-stickers title="#{@sticker_progress}%"
      .progress-bar role="progressbar" style="width:#{@sticker_progress.to_i}%"
  li.pull-right: a 
    = partial 'orders/squares', :locals => { :order => @order }


// - @sections.each do |s|
//   strong = s.name
//   p = s.categories.inspect
//   div
//     - s.categories.each do |c|
//       span = c.name
// 

.table.non-print
  .col-md-3.flex-v.text-center
    h3 == deli(rur @order.total)
    - if @order.finished? || @order.shipped?
      h5 == deli(rur @order.done_total)
    br
    .btns
      = link_to 'Печать', 'javascript:print()', :class => 'btn btn-sm btn-glue'
      - if current_account.is_admin?
        '
        = link_to 'Все', :class => 'btn btn-sm print-all btn-glue'
  .order-info.col-md-5
    p
      ' Имя:
      = link_to url(:clients, :edit, :id => @order.client.id) do
        = !@order.client.name.blank? ? @order.client.name : 'Клиент'
      / |  (#{@order.client.place_name})
    p
      - town_name = @kc_towns[@kc_client_hometown]&.model
      - order_town_name = @kc_towns[@kc_order_town]&.model
      - delivery = @kc_towns[@kc_order_delivery]&.model || @kc_towns[@kc_client_delivery]&.model
      div
        span
          ' Город заказа
        = partial 'bricks/kato/label', :locals => { town_name: order_town_name, el: nil }
      div
        span
          ' Город клиента
        = partial 'bricks/kato/label', :locals => { town_name: town_name, el: nil }
      div
        span
          ' Город доставки
        = partial 'bricks/kato/label', :locals => { town_name: delivery, el: nil }

    p Тел: #{@order.client.tel}
    p Емайл: #{@order.client.email}
    p Дата: #{to_msk(@order.created_at)}
    - unless @timeline_at.nil?
      p Дата отправки: #{to_msk(@timeline_date)}
    p Менеджер: #{@manager&.name}

  - if !@order.description.blank?
    .col-md-4.order-comment
      = @order.description
.clearfix

/div class="row non-print"
  div class="pull-right"
    div class="pull-right"
      = link_to 'Печать', 'javascript:print()', :class => 'btn btn-glue'
      - if current_account.is_admin?
        '
        = link_to 'Все', :class => 'btn print-all btn-glue'

    // - if @order[:status] < 2
    //   = link_to 'Заказ обработан', url(:orders, :sendemail, :id => Order.iq(@order.id)), :class => 'btn btn-warning'

.table.only-print
  table.table.order-info: tr
    td style="width:10%;"
      p # #{@order.id}
      p
        '
        == rur(sticker.sum)
      /p = "ϰ #{cplx}"
    td style="width:20%;"
      p = order_town_name&.name || "*#{@order.place_name}"
      p М: #{@manager&.name}
    td
      .flex-c
        .block.flexie
          = @order.client.name
          
        .block
          - @sections[0...4].each do |tab|
            .section-btn
              = @order.by_sec?(tab.id) ? tab.name[0..3] : nil
        / .block.print-date
          i.fa.fa-file-o
          '
          = to_msk_print(Time.now)
      p
      /p = @order.client.name
      .flex-c
        .block.flexie
          ' Дата:
          ' #{ @timeline_at ? to_msk(@timeline_date) : "?"}
          | (#{((@timeline_date || Date.today) - @order.created_at.to_date).to_i.pred}+)
        .block
          ' Счет:
          - 15.times do
            ' &nbsp;
          ' ТК:
          | #{@order.client.shipping_company}

    - if !@order.client.comment.blank?
      tr: td colspan=3 = @order.client.comment
    - if !@order.description.blank?
      tr: td colspan=3 = @order.description


= form_tag url(:orders, :update, :id => @order.id), :method => :put, :class => 'form-horizontal order' do
  / = hidden_field_tag 'order[id]', :value => @order[:id]
  .block
  
  - if !@order.draft? && current_account.is_admin?
    .non-print
      h4 Настройки
      fieldset.control-group
        = label_tag :category, :class => 'col-md-3 control-label'
        div class='col-md-6 controls'
          select name="status" class="huge"
            - options_for_select(Order.status_for_select, :selected => @order.status).each do |o|
              = o
      fieldset.control-group
        = label_tag 'Дата отправки', :class => 'col-md-3 control-label'
        div class='col-md-3 controls'
          .scrollable-dropdown-menu
            = text_field_tag :'cabie[timeline_at]', :class => 'form-control', :placeholder => "2016-07-23 or Y/m/d"
        
        .btn.btn-sm.btn-default.btn-timeline
          .fa.fa-calendar.fa-btn
          | график

      = partial 'timeline/calendar'

  - if !@order.draft? && @order_part && @order_part.anew?
    div class="non-print"
      h4 Моя часть заказа:
      span Когда вы взяли заказ в работу, нажмите кнопку
      '
      = link_to url(:orders, :status, :id => @order.id), :class => 'btn btn-sm btn-current' do
        | Подтвердить

  - if !@order.draft? && @order_part && @order_part.current?
    div class="non-print"
      h4 Моя часть заказа:
      fieldset class='control-group'
        = label_tag "Коробок", :class => 'col-md-3 control-label'
        .col-xs-1.controls
          = text_field_tag :"order_part[boxes]", :size => 3, :autocomplete => "off", :value => @order_part.boxes, :class => "form-control"
        .col-xs-1
        .col-md-3.controls.custom-control
          = check_box_tag :"order_part[no_boxes]", :id => 'no_boxes', :checked => @order_part.no_boxes?, :class => 'custom-control-input'
          label.custom-control-label(for = 'no_boxes') Нет коробок
      / - if [4,5].include? @my_section.id
        fieldset class='control-group'
          = label_tag "Отправлено на Перекоп", :class => 'col-md-3 control-label'
          div class='col-md-6 controls'
            = hidden_field_tag "order_part[transfer]", :value => 'false'
            = check_box_tag "order_part[transfer]", :checked => @order_part.transfer, :class => ""
    
    .modal tabindex="-1" role="dialog"
      div class="modal-dialog"
        div class='modal-content'
          div class="modal-header"
            h4 class="modal-title" Вы некорректно заполнили заказ
          div class='modal-body'
            p
              ' Нужно указать количество фактически сделанной продукции (по позициям) и общее количество коробок.
              | Поля с ошибками выделены красненьким.
          div class='modal-footer'
            // = form_tag url(:categories, :destroy, :id => category.id), :method => :delete do
            //   = submit_tag pat(:delete), :class =>'list-row-action-popover-delete-one-btn btn btn-danger btn-wide'
            div class='btn btn-default btn-wide cancel' data-dismiss="modal" Закрыть

  / # - t = sec do
  / #   - displayed_n = @sections.flat_map(&:categories).map{|c|@order.by_cat(c.id).size}.sum
  / #   - actual_n = @order.order_lines.count
  / #   p = "#{displayed_n} | #{actual_n}"
  / # p = notice_for_time(t)
  
  - displayed_n = 0
  .block
    ul class="nav nav-tabs non-print" id="order_tab"
      - @sections.each do |tab|
        - cat_enabled = @order.by_sec?(tab.id)
        - displayed_n += 1 if cat_enabled
        - my = @my_section.id == tab.id
        li class=[('disabled' unless cat_enabled), ('my' if my)]
          = link_to tag_icon('fa fa-ok', "#{tab.name}"), "#cat-#{tab.id}", 'data-toggle' => "tab"
      - if @order.order_parts.size != displayed_n 
        li
          a data-toggle='tab' href='#cat-fail'
            i.fa.fa-exclamation-triangle 
  
    div class="tab-content" id="for_order_tab"
      - @sections.each_with_index do |s, i|
        - tab_visible = @order.by_sec?(s.id)
        - my = @my_section.id == s.id
        - unless tab_visible
          block.non-print id="cat-#{s.id}"
        - else
          .tab-pane id="cat-#{s.id}" class=[('filled' if tab_visible), ('my' if my), ('non-print' unless tab_visible && my)]
            - s.categories.each do |tab|
              - cat_visible = @order.by_cat?(tab.id)
              - if cat_visible
                div class="table-res4ponsive"
                  h4.non-print = tab.name
                  table.table
                    thead.only-print: tr: td colspan=10 = tab.name
                    tr
                      th.only-print width='10%' Собрано
                      th Наименование
                      th Коммент
                      th Количество
                      th.non-print Цена
                      th.non-print Сумма
                      th.non-print Наклеено
                      th.non-print Факт
                      th.non-print Не&nbsp;делаем
                      th.only-print width='5%' Деколи
                      th.only-print width='5%' Тираж
                    
                    - @order.by_cat(tab.id).each do |ol|
                      tr class="order-line"
                        = hidden_field_tag "line[#{ol.id}][id]", :value => ol[:id]
                        td.only-print &nbsp;
                        td.col-md-4
                          = ol.product.displayname
                        td.col-md-3
                          - if !ol.description.blank?
                            div = ol.description
                        td.col-md-1
                          = ol.amount
                        td.col-md-1.non-print
                          == rur(ol.price)
                        td.col-md-1.non-print
                          == rur(ol.price*ol.amount)
                        td.col-md-1.non-print.td-sticker-input
                          - if @kc_products[ol.product_id] && !ol.ignored
                            - ols = @olstickers.fetch(ol.id, nil)
                            .input-group-sm class=('input-group' if ols)
                              - if allow_route?(:orders_stickers)
                                = (text_field_tag "line_s[#{ol.id}][sticker]", :value => ols&.fetch(:v),
                                  :autocomplete => "off", :class => "form-control input-sm")
                              - else
                                = ols&.fetch(:v)
                              - if ols
                                .input-group-addon
                                  .label.label-success = to_dm timeline_unf(ols[:t])
                        td.col-md-1.non-print: .controls
                          - if allow_route?(:orders_infact)
                            = (text_field_tag "line[#{ol.id}][done_amount]", :value => ol.done_amount,
                            :autocomplete => "off", :class => "form-control input-sm")
                          - else
                            .text-center = ol.done_amount
                        td.col-md-1.vert-align.non-print: .controls
                          - if allow_route?(:orders_infact)
                            = hidden_field_tag "line[#{ol.id}][ignored]", :value => 'false'
                            = check_box_tag "line[#{ol.id}][ignored]", :checked => ol.ignored
                          - else
                            = check_box_tag '', :checked => ol.ignored, :disabled => true
                        td.only-print
                        td.only-print
      .tab-pane.non-print id="cat-fail"
        p У этого заказа заглючили секции. Тут будет кнопка для исправления.

  /div class="non-print"
    h4 class="pull-right"
      ' Сумма заказа:
      == rur("%0.f" % @order.total)
    - if @order.finished? || @order.shipped?
      div class="clearfix"
      h4 class="pull-right"
        ' Фактически собрано на:
        == rur("%0.f" % @order.done_total)

  - if !@order.draft? && !@order.shipped?
    - if current_account.is_admin? or (@order_part and @order_part.current?)
      = submit_tag "Сохранить", :class => 'btn btn-sm btn-prime', :name => 'save'
  - elsif current_account.is_admin? && !@order.draft?
    = submit_tag "Сохранить", :class => 'btn btn-sm btn-prime', :name => 'save_finish'
  - unless role_is?(:stickerman)
    - if @order_part and @order_part.current?
      |&nbsp;
      = submit_tag "Собрать", :class => 'btn btn-sm btn-finished', :name => 'next_status'
    - if current_account.is_admin? && !@order.shipped? && !@order.draft?
      |&nbsp;
      = submit_tag "Собрать все части", :class => 'btn btn-sm btn-finished', :name => 'next_status_all'

  - if current_account.is_admin? && !@order.draft?
    div class="row non-print" style="margin-top: 30px;"
      = link_to "Создать дополнение к заказу ", url(:orders, :addition, :id => @order.id)
      span data-toggle="tooltip" data-placement="right" title="Создает новый заказ с разницей от текущего,\
      проверьте заполненность значений фактически сделанной продукции"
        = tag_icon "question-circle"

  .clearfix


- content_for :js_assets do
  javascript:
    (function($) {
      $(function() {
        var validateForm = function() {
          var valid = true;
          var lines = $(".my tr.order-line");
          var amounts = $(":input[name*=done_amount]", lines);
          amounts.parents(".controls").removeClass("has-error");
          lines.each(function() {
            var a = $(":input[name*=done_amount]", this);
            var ignore = $(":input[name*=ignored]", this);
            if (!ignore[1].checked && +a.val() < 1 || ignore[1].checked && +a.val() > 0) {
              a.parents(".controls").addClass("has-error");
              valid = false;
            }
          });
          return valid;
        }
        
        var ari = function(field) {
          var val = $(field).val();
          if (val.length > 0 && val[0] == '=')
            $(field).val(eval(val.substr(1)));
        }
        
        $('form :input').keypress(function(event) {
          if (event.keyCode == 13) {
            ari(this);
            return false;
          }
        });
        
        // Tabs
        $('#order_tab a').click(function (e) {
          e.preventDefault();
          $(this).tab('show');
        });
        var first_tab = $('#order_tab li.my:not(.disabled):first a')
          || $('#order_tab li:not(.disabled):first a');
        first_tab.tab('show');
        if($($('#for_order_tab .tab-pane')[1]).not('.non-print').length > 0)
          $('#for_order_tab .tab-pane:first').addClass('last');
        $('#for_order_tab .tab-pane:not(.non-print):last').addClass('last');

        $(":input[name*='done_amount']").on("change", function(e) { ari(this); });

        $(":input[name='next_status']").on("click", function(e) {
          var valid = validateForm();
          var boxes = $(":input[name*=boxes]");
          boxes.parents(".control-group").removeClass("has-error");
          if (+boxes.val() < 1) {
            boxes.parents(".control-group").addClass("has-error");
            valid = false;
          }
          if (!valid) $(".modal").modal();
          return valid;
        });

        $("calendar").on("click", ".day", function() {
          var day = $(this);
          let inp = $('input[name="cabie[timeline_at]"]')
          inp.val($('input', day).val())
          $('calendar').toggle('collapse')
          
          //var data = "id=" + $(":input:first", line).val() + "&authenticity_token=" + $("form:first :input[name^='auth']").val();
          // $.ajax({ type: "POST", url: "/order/cartdel", data: {} });
        });
        $(".btn-timeline").on("click", function() {
          // var day = $(this);
          $('calendar').toggle('collapse')
          // $.ajax({ type: "POST", url: "/order/cartdel", data: {} });
        });
        
        $(":input[name='save']").on("click", function(e) {
          var valid = true;
          var lines = $("tr.order-line");
          var amounts = $(":input[name*=done_amount]", lines);
          amounts.parents(".controls").removeClass("has-error");
          lines.each(function() {
            var a = $(":input[name*=done_amount]", this);
            var ignore = $(":input[name*=ignored]", this);
            if (ignore[1].checked && +a.val() > 0) {
              a.parents(".controls").addClass("has-error");
              valid = false;
            }
          });
          return valid;
        });
        
        $(".btn.print-all").on("click", function() {
          $("#for_order_tab .tab-pane.filled").removeClass("non-print")
          print()
        });
      });
    })(jQuery);
