
- filter = @filtered_by_user.is_a? Array
- abl_view = @sections.map{|s|can_view_section?(:sections, :list, s.id) ? s.id : nil }
- kc_os = KSM::OrderStatus.find_all(@orders.map(&:id))
- reveals = []
- @orders.each do |order|
  - os = kc_os.detect{|kc|kc.id.to_i == order.id} || KSM::OrderStatus.new(id: order.id)
  - next if (abl_view & os.pstate.keys).empty?
  - next if filter && !@filtered_by_user&.include?(order.id)
  - reveals << order

- if @r == url(:orders, :index) && can_view_any_section?(:sections, :sum)
  - @orders = reveals
  - price_total = @orders.map(&:total).sum
  - all_ids = @orders.map(&:id)
  - sec_sums = sum_by_sections(all_ids)

  .timeline: .summary
    - by_deli = sum_by_delivery(@orders)
    - [:postage, :vernissage, :roundtrip, :pickup].each do |ds|
      - if by_deli[ds] > 0
        .item-orders.pull-left
          span = t :"delivery.#{ds.to_s}"
          .rpr == deli(rur by_deli[ds])

    .pull-left
    - sections = Section.all
    - sections.each do |s|
      - next unless can_view_section?(:sections, :sum, s.id)
      - sec_sum = sec_sums.fetch(s.id, 0)
      - if sec_sum > 0
        .item-all.pull-left
          span = s.name
          .rpr == deli(rur sec_sum)

    .item-all.pull-right
      span Сумма заказов
      .rpr == deli(rur price_total)

    - if can_view_stickers?
      - @stickers = CabiePio.all_keys(all_ids, folder: [:sticker, :order]).flat.trans(:to_i, :to_f)
      - @kc_stickers = CabiePio.all_keys(all_ids, folder: [:sticker, :order_progress]).flat.trans(:to_i, :to_f)
      - @kc_sumstickers = @stickers.map{|k,v|[k, v*@kc_stickers.fetch(k,0)/100]}.to_h
      - stickers_done = @kc_sumstickers.values.sum
      - stickers_total = @stickers.values.sum
      .item-sticker.pull-right
        span Клейка
        .rpr == deli(rur stickers_total)
      .item-sticker.pull-right
        span Сделано #{((stickers_done.to_f/stickers_total)*100).ceil rescue 0}%
        .rpr == deli(rur stickers_done)


.tabs-content
  table class="table table-hover table-condensed" id="list"
    thead
      tr
        th class='header list-menu non-print'
          div class='dropdown'
            a href='#' class='list-menu-toggle.dropdown-toggle dropdown-toggle' data-toggle='dropdown'
              // = tag_icon :magic
            ul class='list-menu dropdown-menu' role='dropdown'
              li class='list-menu-wrapper' = link_to 'select_all', '#', :id => 'select-all', :class => 'list-menu-link'
              li class='list-menu-wrapper list-menu-wrapper-disabled' = link_to 'deselect_all', '#', :id => 'deselect-all', :class => 'list-menu-link list-menu-link-disabled'
              li class='list-menu-divider divider'
        th class='header' Номер
        th.header
        th class='header' Город
        th class='header' Куда едет
        th.header width='50px'
        th class='header' Заказчик
        th class='header' Дата
        th.header
          a href=local(seq: params[:seq] ? :none : :timeline) Отправка
        th class='header' Менеджер
        th class='header' Тр.ком
        th class='header only-print' Сумма
        th.header.non-print width='80px'
        th class='header non-print'
          = partial 'bricks/orders/section_titles'
        th class='header non-print'
        th class='header list-row-action-header non-print'
          ' Всего:
          rowsummer target='#list'
    
    tbody
      - reveals.each do |order|
        - os = kc_os.detect{|kc|kc.id.to_i == order.id} || KSM::OrderStatus.new(id: order.id)
        / # - next if (abl_view & os.pstate.keys).empty?
        / # - next if filter && !@filtered_by_user&.include?(order.id)
        tr class='list-row non-print #{order.priority ? "warning" : ""}'
          td class='list-column list-selectable non-print' = check_box_tag 'order_ids[]', :autocomplete => "off", :value => order.id, :class => 'list-selectable-checkbox'
          td class='list-column'
            - if !order.draft?
              = link_to order.id, :href => url(:orders, :edit, :id => order.id)
            - else
              = "#{order.id}"
          td.list-column
            = tja :delivery, order.delivery
            | &nbsp;&nbsp;
          // td class='list-column' = order.name
          td class='list-column'
            - code = @kc_orders[order.id.to_s]
            - town_name = @kc_towns[code]&.model
            = partial 'bricks/kato/label_print', :locals => { town_name: town_name, el: order }
          td class='list-column'
            - code = @kc_delivery[order.id.to_s] || @kc_client_delivery[order.client_id.to_s]
            - town_name = @kc_towns[code]&.model
            = partial 'bricks/kato/label_print', :locals => { town_name: town_name, el: order }
          td.list-column.minirur.text-nowrap
            == deli(rur (order.total/1000.0).floor)
            |&nbsp;&nbsp;
            - if @current_account.is_admin?
              .icash.fa class=(@kc_cash.fetch(order.id, nil) ? 'fa-money' : 'fa-credit-card')
          td class='list-column' = order.client.name
          td.list-column.text-center.text-nowrap = to_dm(order.created_at)
          td.list-column.text-center.text-nowrap class=('date-warning' if @kc_blinks.fetch(order.id, nil))
            - odate = @kc_timelines[order.id]
            = to_dm(timeline_unf(odate)) if odate
          td class='list-column'
            - kc_man = @kc_managers[@kc_hometowns[order.client_id.to_s]]
            = @managers[kc_man.to_i] if kc_man
          td class='list-column'
            = partial 'bricks/orders/transport', :locals => { client_id: order.client_id }
          td class='list-column only-print' = "%0.f" % order.done_total
          td.list-column.non-print
            span.label class="label-#{os.state}"
              = t :"status.#{os.state}"
          td class='list-column text-nowrap non-print'
            = partial 'orders/squares', :locals => { :order => order, status: os }
            // - @sections.each do |s|
            //   - s_st = order.order_parts.find_by(:section_id => s.id)
            //   = content_tag :button, !s_st.nil? && s_st.transfer ? "п": "", :class => "btn btn-sm btn-#{s_st.nil? ? 'default' : s_st.state}"
            //   | &nbsp;
            // | &nbsp;

          td.list-column.non-print
            - progress = @kc_stickers.fetch(order.id, 0)
            .progress.short.for-stickers title="#{progress}%" class=('danger' if progress > 130)
              .progress-bar role="progressbar" style="width:#{progress.to_i}%"
            - if @r == url(:orders, :finished) && order.finished?
              = link_to "Отправить", :href => url(:orders, :ship, :id => order.id), :class => "btn btn-xs btn-shipped"
            - if @r == url(:orders, :draft) && order.draft?
              = link_to "Подтвердить", :href => url(:orders, :anew, :id => order.id), :class => "btn btn-xs btn-anew"

            // - per = to_percent(order.all_parts, order.done_parts)
            // <div class="progress" data-toggle="tooltip" data-placement="top" title="#{per}% сделано">
            //   <div class="progress-bar progress-bar-info" role="progressbar" aria-valuenow="#{per}" aria-valuemin="0" aria-valuemax="100" style="width: #{per}%">
            //     <span class="sr-only">#{per}% Complete</span>
            //   </div>
            // </div>
          
          td class='list-column list-row-action non-print'
            .list-row-action-wrapper
              - if os.what?(:anew)
                = link_to tag_icon(:'exclamation-circle'), :class => 'list-row-action-delete-two list-row-action-wrapper-link'
              - if can_view?(:list, :stickers) || allow_route?(:orders_stickers)
                = link_to tag_icon(:ticket), :rel => :tooltip, :title => "Stickers", :href => url(:stickers, :order, :id => order.id), :class => 'list-row-action-wrapper-link'
              - if current_account.is_admin?
                = link_to tag_icon(:paw), :rel => :tooltip, :title => "Edit order", :href => url(:orders, :correct, :id => order.id), :class => 'list-row-action-wrapper-link'
              - if !order.draft?
                = link_to tag_icon(:edit), :href => url(:orders, :edit, :id => order.id), :class => 'list-row-action-wrapper-link'
              - if order.draft?
                = link_to tag_icon("trash-o"), :rel => :tooltip, :title => "#{pat(:delete)} order", :class => 'list-row-action-delete-one list-row-action-wrapper-link'
            .modal
              .modal-dialog
                .modal-content
                  .modal-header
                    h4.modal-title We gonna delete this item
                  .modal-body
                    p Точно удалить?
                  .modal-footer
                    = form_tag url(:orders, :destroy, :id => order.id), :method => :delete do
                      = submit_tag pat(:delete), :class =>'list-row-action-popover-delete-one-btn btn btn-danger btn-wide'
                      .btn.btn-default.btn-wide.cancel data-dismiss="modal" = pat(:cancel)
            .modal
              .modal-dialog
                .modal-content
                  .modal-header
                    h4.modal-title Обратно в непроверенные
                  .modal-body
                    p Точно?
                  .modal-footer
                    = form_tag url(:orders, :backdraft, :id => order.id), :method => :put do
                      = submit_tag pat(:yes), :class =>'list-row-action-popover-delete-one-btn btn btn-danger btn-wide'
                      .btn.btn-default.btn-wide.cancel data-dismiss="modal" = pat(:cancel)

- content_for :js_assets do
  javascript:
    (function($) {
      $(function() {
  
        $(".list-selectable-checkbox").on("change", function() {
          $(this).parents(".list-row").toggleClass('non-print');
        });

        $('.list-row-action-delete-two').on('click', function(ev) {
          ev.preventDefault();
          $(this).parent().next().next().modal();
        });
        
      });
    })(jQuery);

  = javascript_include_tag :riot
  rscript type="riot/tag" src="/riot/tags/idcollapser.tag"
  rscript type="riot/tag" src="/riot/tags/subclick.tag"
  rscript type="riot/tag" src="/riot/tags/switcher.tag"
  rscript type="riot/tag" src="/riot/tags/elhide.tag"
  rscript type="riot/tag" src="/riot/tags/rowsummer.tag"

  javascript:
    
    document.addEventListener("DOMContentLoaded", function(event) {
      riot.mount('idcollapser, subclick, switcher, elhide, rowsummer')
    })
