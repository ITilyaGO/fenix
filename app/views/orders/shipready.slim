.pull-left
  clicker.btn.btn-xs.btn-prepare action='READ_SHIPREADY' Просмотреть
  
div class="tabs-content"
  table class="table table-hover table-condensed" id="list"
    thead
      tr
        th class='header list-menu non-print'
          div class='dropdown'
            a href='#' class='list-menu-toggle.dropdown-toggle dropdown-toggle' data-toggle='dropdown'
              // = tag_icon :magic
            ul class='list-menu dropdown-menu' role='dropdown'
              li class='list-menu-wrapper' = link_to 'select_all', '#', :id => 'select-all', :class => 'list-menu-link'
              li class='list-menu-wrapper list-menu-wrapper-disabled' = link_to 'deselect_all', '#', :id => 'deselect-all', :class => 'list-menu-link list-menu-link-disabled'
              li class='list-menu-divider divider'
        th class='header' Номер
        th.header: .hidden-md.hidden-lg Доставка
        th.header.text-center width='70px' Собран
        // th class='header' = mat(:order, :name)
        // th class='header' = mat(:order, :amount)
        th class='header' Заказчик
        th class='header' Город
        th class='header' Куда едет
        th class='header only-print' Тр.ком
        th class='header' Телефон
        th.header.text-center Менеджер
        th class='header' ТK
        th class='header only-print' ИНН (паспорт)
        th.header width='50px'
        th.header.non-print
        th class='header non-print'
          = partial 'bricks/orders/section_titles'
        th class='header non-print'
        th class='header text-center non-print'
          ' Всего:
          rowsummer target='#list' filter='.non-print'

    - abl_view = @sections.map{|s|can_view_section?(:sections, :list, s.ix) ? s.ix : nil }
    - kc_os = KSM::OrderStatus.find_all(@orders.map(&:id))
    tbody
      - @orders.each do |order|
        - os = kc_os.detect{|kc|kc.id.to_i == order.id} || KSM::OrderStatus.new(id: order.id)
        - next if (abl_view & os.pstate.keys).empty?
        tr class=['list-row non-print', ('warning' if storebox(:counters, :shipready).include? order.id)]
          td class='list-column list-selectable non-print'
            = check_box_tag 'order_ids[]', :autocomplete => "off", :value => order.id, 'riot-tag': 'print_selectable', :class => 'list-selectable-checkbox'
          td class='list-column' = order.id
          td.list-column
            = tja :delivery, order.delivery
            | &nbsp;&nbsp;
          td.list-column.text-center = to_dm(Time.parse @kc_done[order.id]) rescue nil
          // td class='list-column' = order.name
          td class='list-column' = order.client.name
          td class='list-column'
            - code = @kc_orders[order.id.to_s]
            - town_name = @kc_towns[code]&.model
            = partial 'bricks/kato/label_print', :locals => { town_name: town_name, el: order }
          td class='list-column'
            - code = @kc_delivery[order.id.to_s] || @kc_client_delivery[order.client_id.to_s]
            - town_name = @kc_towns[code]&.model
            = partial 'bricks/kato/label_print', :locals => { town_name: town_name, el: order }
          td class='list-column only-print' = order.client.shipping_company
          // td class='list-column' = to_msk(order.created_at)
          td class='list-column' = order.client.tel
          td.list-column.text-center
            = order.client&.manager&.name
            - unless order.client&.manager_id
              .fa.fa-briefcase.text-danger
          td class='list-column'
            - trc = @transport.detect { |t| t.id == KSM::OrderShip.find(order.id).transport.to_s }
            = partial 'bricks/kc/transport', :locals => { name: trc&.name || trc&.id }
          td class='list-column only-print' = order.client.inn
          td.list-column.minirur.text-nowrap == deli(rur (order.total/1000.0).floor)
          td.list-column.non-print
            span.label class="label-#{os.state}"
              = t :"status.#{os.state}"
          td class='list-column text-nowrap non-print'
            = partial 'orders/squares_boxes', :locals => { :order => order }
          td class='list-column non-print'
            - if can_view?(:list, :shipready) && order.shipready?
              clicker.btn.btn-xs.btn-shipped tie=order.id action="TIEMODAL_OPEN" = t :"action.ship"
            - if order.draft?
              = link_to (t 'action.confirm'), :href => url(:orders, :anew, :id => order.id), :class => "btn btn-xs btn-anew"
          td class='list-column list-row-action non-print'
            div class='list-row-action-wrapper'
              = link_to tag_icon(:edit), :href => url(:orders, :edit, :id => order.id), :class => 'list-row-action-wrapper-link'
              = link_to tag_icon("file-text-o"), :href => url(:orders, :invoice, :id => order.id), :class => 'list-row-action-wrapper-link'
              - if current_account.is_admin?
                = link_to tag_icon(:save), :href => url(:c1c, :create, :id => order.id), :class => 'list-row-action-wrapper-link'
              - if order.finished? && current_account.is_admin?
                = link_to tag_icon(:cube), :href => url(:orders, :boxes, :id => order.id), :class => 'list-row-action-wrapper-link'
                = link_to tag_icon(:usd), :href => url(:orders, :price, :id => order.id), :class => 'list-row-action-wrapper-link'
              - if order.draft?
                = link_to tag_icon("trash-o"), :rel => :tooltip, :title => "#{pat(:delete)} order", :class => 'list-row-action-delete-one list-row-action-wrapper-link'
            div class='modal'
              div class="modal-dialog"
                div class='modal-content'
                  div class="modal-header"
                    h4 class="modal-title" We gonna delete this item
                  div class='modal-body'
                    p Точно удалить?
                  div class='modal-footer'
                    = form_tag url(:orders, :destroy, :id => order.id), :method => :delete do
                      = submit_tag pat(:delete), :class =>'list-row-action-popover-delete-one-btn btn btn-danger btn-wide'
                      div class='btn btn-default btn-wide cancel' data-dismiss="modal" = pat(:cancel)
        tr.list-row.hide
          td colspan=3 class='list-column' style="#{('background: #d0d0d0 !important' if !order.client.comment.blank?)}"
            = order.client.comment
          td class='list-column'
            - order.order_parts.each do |op|
              p = @sections.detect { |s| s.ix == op.section_id }.name
          td class='list-column'
            - order.order_parts.each do |op|
              p
                - if op.transfer
                  span На Перекопе
          td colspan=2 class='list-column'
            - order.order_parts.each do |op|
              p = "коробок: #{op.boxes}"

tiemodal.modal
  .modal-dialog
    .modal-content
      = form_tag url(:orders, :ship), :method => :put do
        .modal-header.flex-c
          h4.modal-title = t :'action.ship'
          .flexie
        .modal-body
          = hidden_field_tag :oid
          span
            | Заказ { num } будет отправлен
        .modal-footer
          button.btn.btn-shipped.btn-wide type='submit' Подтвердить
          clicker.btn.btn-default.btn-wide.cancel action='TIEMODAL_CLOSE' = pat(:cancel)

.modal-backdrop.in.hide
page

- content_for :js_assets do
  = javascript_include_tag :riot
  rscript type="riot/tag" src="/riot/tags/idcollapser.tag"
  rscript type="riot/tag" src="/riot/tags/subclick.tag"
  rscript type="riot/tag" src="/riot/tags/switcher.tag"
  rscript type="riot/tag" src="/riot/tags/elhide.tag"
  rscript type="riot/tag" src="/riot/tags/rowsummer.tag"
  rscript type="riot/tag" src="/riot/tags/clicker.tag"
  rscript type="riot/tag" src="/riot/tags/tiemodal.tag"
  rscript type="riot/tag" src="/riot/tags/print_selectable.tag"
  rscript type="riot/tag" src="/riot/tags/shipready-order/page.tag"

  javascript:
    document.addEventListener("DOMContentLoaded", function(event) {
      riot.mount('idcollapser, subclick, switcher, elhide, rowsummer, clicker, tiemodal, print_selectable, page')
    })
