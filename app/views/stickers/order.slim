- cplx = order_cplx(@order.id)
- sticker = order_sticker(@order.id)

/- @order.order_lines.each do |ol|
  .alert
     = CabiePio.all([:m, :order_lines, :sticker], [ol.id]).flat
     br
     = CabiePio.all([:m, :order_lines, :sticker_sum], [ol.id]).flat
/ = calc_sticker_sum(@order.order_lines)
/ br
/ = CabiePio.get([:orders, :stickers_amount], @order.id).data.to_i
/ br
/ = calc_sticker_sum_for_day(@order.order_lines, @day)
ul class="nav nav-tabs non-print"
  li = link_to tag_icon(:list, pat(:list)), url(:orders, :index)
  li = link_to tag_icon(:edit), url(:orders, :edit, :id => @order.id)
  li.active = link_to tag_icon(:ticket, "Stickers #{@order.id}"), url(:stickers, :order, :id => @order.id)
  li = link_to '#' do
    span class="label label-#{@order.status}"
      = t :"status.#{@order.status}"
  li = link_to '#' do
    ' сложность
    .label.label-info = cplx
  li.pull-right: a 
    = partial 'orders/squares', :locals => { :order => @order }


// - @sections.each do |s|
//   strong = s.name
//   p = s.categories.inspect
//   div
//     - s.categories.each do |c|
//       span = c.name
// 

.table.non-print
  .col-md-3.flex-v.text-center
    h3 == deli(rur @order.total)
    - if @order.finished? || @order.shipped?
      h5 == deli(rur @order.done_total)
    br
    .btns
      = link_to 'Печать', 'javascript:print()', :class => 'btn btn-sm btn-glue'
      - if current_account.is_admin?
        '
        = link_to 'Все', :class => 'btn btn-sm print-all btn-glue'
  .order-info.col-md-5
    p
      ' Имя:
      = link_to url(:clients, :edit, :id => @order.client.id) do
        = !@order.client.name.blank? ? @order.client.name : 'Клиент'
      / |  (#{@order.client.place_name})
    p
      - town_name = @kc_towns[@kc_client_hometown]&.model
      - order_town_name = @kc_towns[@kc_order_town]&.model
      - delivery = @kc_towns[@kc_order_delivery]&.model || @kc_towns[@kc_client_delivery]&.model
      div
        span
          ' Город заказа
        = partial 'bricks/kato/label', :locals => { town_name: order_town_name, el: nil }
      div
        span
          ' Город клиента
        = partial 'bricks/kato/label', :locals => { town_name: town_name, el: nil }
      div
        span
          ' Город доставки
        = partial 'bricks/kato/label', :locals => { town_name: delivery, el: nil }

    p Тел: #{@order.client.tel}
    p Емайл: #{@order.client.email}
    p Дата: #{to_msk(@order.created_at)}
    - unless @timeline_at.nil?
      p Дата отправки: #{to_msk(@timeline_date)}
    p Менеджер: #{@manager&.name}

  
  .col-md-4
    - if !@order.description.blank?
      .order-comment = @order.description
      br
  

    /.order-paper: fcollapser titler="файлы: #{@ps.count}"
      .row: div
        /- KSM::OrderImage.all(@order.id).each do |p|
        /= KSM::OrderImage.count

        piclist order=@order.id images=@ps.map(&:id).join(' ') ext=@ps.map(&:is_picture?).join(' ') admin=(allow_route?(:picupload) ? 1 : 0)
        /- ps.each do |p|

          img src=('/images/orders/'+p.id) width='100px'
        /- 3.times do |p|
          img src='/orders/1.png' width='100px'

      - if allow_route?(:picupload)
        = form_tag url(:picupload, :up, :id => @order.id), :method => :post, :enctype => "multipart/form-data" do
          .fileinput.fileinput-new data-provides="fileinput"
            .pull-right
            
              .btn.btn-xs.btn-prime.btn-embossed.btn-file.fileinput-new
                .fileinput-new Загрузить
                input type="file" name="files[]" accept='.pdf,.png,image/*' multiple="true"
              '
              button.btn type="submit" class="btn-xs btn-prime btn-embossed fileinput-exists"
                .fa.fa-upload
                | Upload

        .clearfix
        /piced value=@picorder product=@product.id
.clearfix

hr
.sticker-line
  .lbls
    .label.label-darkrose == deli(rur sticker.first)
    - if sticker.last > 0
      ' &nbsp;
      .label.label-purple == deli (rur sticker.last)
  .progress.for-stickers.ninety title="#{@sticker_progress}%" class=('danger' if @sticker_progress > 130)
    .progress-bar role="progressbar" style="width:#{@sticker_progress&.ceil}%"
br

= form_tag url(:stickers, :update, :id => @order.id), :method => :put, :class => 'form-horizontal order' do


  fieldset.control-group.stickers_tab
    /.col-md-3
      = label_tag 'Дата клейки', :class => 'control-label'
      .controls
      
        = text_field_tag :'cabie[timeline_at]', :class => 'form-control', :placeholder => ""
    
    /li
    
    #stickers_tab.col-auto.flex-c

      /.col-md-3
      /.btn.btn-sm.btn-default.btn-timeline
        .fa.fa-calendar.fa-btn
      / = submit_tag tag_icon(:times), :class => 'btn btn-sm btn-danger', :name => 'delete'
      .btns
      a title="Удалить день": .btn.btn-sm.btn-danger.btn-timeline: .fa.fa-times
      a = text_field_tag :day, :class => 'form-control', :placeholder => "Дата клейки", :value => @day
      /li
      a: .btn-sm.btn-timeline: .fa.fa-calendar.fa-btn
      ul.nav.nav-tabs
        li.spacer
          | &nbsp;
        / li scroll
        / li
        /   .text scroll
        /   .fa.fa-arrow-right
        - today = Date.today
        - much = @add_days.uniq.size > 2 ? 4 : 7
        - much.times{|i|@add_days << today.prev_day(i)}
        - @add_days.uniq.sort.each_with_index do |tab, i|
          - history = @history[timeline_id(tab)]
          li class=[('active' if tab == @day), ('history' unless history.nil?)] title=history&.round(1)
            = link_to url(:stickers, :order, id: @order.id, date: timeline_id(tab)), class: 'flex-v text-center'
              .t = to_dm(tab)
              strong = shortday(tab)
            - if history
              .progress.for-stickers.mini.ninety
                .progress-bar role="progressbar" style="width:#{history&.ceil}%"
        li.spacer
          | &nbsp;

      / = hidden_tag :day, value=timeline_id(tab[:date])
      .col = submit_tag "Сохранить клейку", :class => 'btn btn-sm btn-finished', :name => 'save'
      
    = partial 'timeline/calendar', locals: { start: @day.prev_month(2).end_of_week, busy: true }
    
  - displayed_n = 0
  .block
    ul class="nav nav-tabs non-print" id="order_tab"
      - @sections.each do |tab|
        - cat_enabled = @order.by_sec?(tab.id)
        - displayed_n += 1 if cat_enabled
        - my = @my_section.id == tab.id
        li class=[('disabled' unless cat_enabled), ('my' if my)]
          = link_to tag_icon('fa fa-ok', "#{tab.name}"), "#cat-#{tab.id}", 'data-toggle' => "tab"
      - if @order.order_parts.size != displayed_n 
        li
          a data-toggle='tab' href='#cat-fail'
            i.fa.fa-exclamation-triangle 
  
    div class="tab-content" id="for_order_tab"
      - @sections.each_with_index do |s, i|
        - tab_visible = @order.by_sec?(s.id)
        - my = @my_section.id == s.id
        - unless tab_visible
          block.non-print id="cat-#{s.id}"
        - else
          .tab-pane id="cat-#{s.id}" class=[('filled' if tab_visible), ('my' if my), ('non-print' unless tab_visible && my)]
            - s.categories.each do |tab|
              - cat_visible = @order.by_cat?(tab.id)
              - if cat_visible
                div class="table-res4ponsive"
                  h4.non-print = tab.name
                  table.table
                    thead.only-print: tr: td colspan=10 = tab.name
                    tr
                      th.only-print Отметка
                      th Наименование
                      th Коммент
                      th Количество
                      th.non-print Цена
                      th.non-print Сумма
                      th.non-print Наклеено
                      th.non-print.text-center Факт
                    
                    - @order.by_cat(tab.id).each do |ol|
                      tr class="order-line"
                        = hidden_field_tag "line[#{ol.id}][id]", :value => ol[:id]
                        td.only-print &nbsp;
                        td.col-md-4
                          /sup = ol[:id]
                          = ol.product.displayname
                        td
                          - if !ol.description.blank?
                            div = ol.description
                        td.col-md-1
                          = ol.amount
                        td.col-md-1.non-print
                          == rur(ol.price)
                        td.col-md-1.non-print
                          == rur(ol.price*ol.amount)
                        td.col-md-1.non-print.td-sticker-input
                          - ols = @olstickers.fetch(ol.id, nil)
                          - olh = @olsum.fetch(ol.id, nil)
                          - if @kc_products[ol.product_id] && !ol.ignored
                            .input-group-sm class=('input-group' if ols || olh)
                              - if allow_route?(:orders_stickers)
                                = (text_field_tag "stickers[#{ol.id}]", :value => ols&.fetch(:v),
                                  :autocomplete => "off", :class => "form-control input-sm")
                              - else
                                = ols&.fetch(:v)
                              - if olh
                                .input-group-addon
                                  .label.label-success = olh&.fetch(:v)
                          - elsif ol.ignored
                            - if olh
                              .label.label-success = olh&.fetch(:v)
                        td.col-md-1.non-print: .controls.text-center
                          - if false
                            = (text_field_tag "line[#{ol.id}][done_amount]", :value => ol.done_amount,
                            :autocomplete => "off", :class => "form-control input-sm")
                          - else
                            = ol.done_amount
                            - if ol.ignored
                              .fa.fa-times
                        /td.col-md-1.vert-align.non-print: .controls
                          - if false
                            = hidden_field_tag "line[#{ol.id}][ignored]", :value => 'false'
                            = check_box_tag "line[#{ol.id}][ignored]", :checked => ol.ignored
                          - else
                            = check_box_tag '', :checked => ol.ignored, :disabled => true
      .tab-pane.non-print id="cat-fail"
        p У этого заказа заглючили секции. Тут будет кнопка для исправления.

  /div class="non-print"
    h4 class="pull-right"
      ' Сумма заказа:
      == rur("%0.f" % @order.total)
    - if @order.finished? || @order.shipped?
      div class="clearfix"
      h4 class="pull-right"
        ' Фактически собрано на:
        == rur("%0.f" % @order.done_total)



/- content_for :js_assets do
  = javascript_include_tag :riot, :fileinput
  / rscript type="riot/tag" src="/riot/tags/sticker_line.tag"
  rscript type="riot/tag" src="/riot/tags/fcollapser.tag"
  rscript type="riot/tag" src="/riot/tags/picmod.tag"
  rscript type="riot/tag" src="/riot/tags/piclist.tag"
  javascript:
    document.addEventListener("DOMContentLoaded", function(event) {
      riot.mount('fcollapser, piclist, picmod')
    });

- content_for :js_assets do
  javascript:

    (function($) {
      $(function() {
        var validateForm = function() {
          var valid = true;
          var lines = $(".my tr.order-line");
          var amounts = $(":input[name*=done_amount]", lines);
          amounts.parents(".controls").removeClass("has-error");
          lines.each(function() {
            var a = $(":input[name*=done_amount]", this);
            var ignore = $(":input[name*=ignored]", this);
            if (!ignore[1].checked && +a.val() < 1 || ignore[1].checked && +a.val() > 0) {
              a.parents(".controls").addClass("has-error");
              valid = false;
            }
          });
          return valid;
        }
        
        var ari = function(field) {
          var val = $(field).val();
          if (val.length > 0 && val[0] == '=')
            $(field).val(eval(val.substr(1)));
        }
        
        $('form :input').keypress(function(event) {
          if (event.keyCode == 13) {
            ari(this);
            return false;
          }
        });
        
        // Tabs
        $('#order_tab a').click(function (e) {
          e.preventDefault();
          $(this).tab('show');
        });
        var first_tab = $('#order_tab li.my:not(.disabled):first a')
          || $('#order_tab li:not(.disabled):first a');
        first_tab.tab('show');
        if($($('#for_order_tab .tab-pane')[1]).not('.non-print').length > 0)
          $('#for_order_tab .tab-pane:first').addClass('last');
        $('#for_order_tab .tab-pane:not(.non-print):last').addClass('last');

        $(":input[name*='done_amount']").on("change", function(e) { ari(this); });

        $(":input[name='next_status']").on("click", function(e) {
          var valid = validateForm();
          var boxes = $(":input[name*=boxes]");
          boxes.parents(".control-group").removeClass("has-error");
          if (+boxes.val() < 1) {
            boxes.parents(".control-group").addClass("has-error");
            valid = false;
          }
          if (!valid) $(".modal").modal();
          return valid;
        });

        $("calendar").on("click", ".day", function() {
          var day = $(this);
          let inp = $('input[name=day]')
          inp.val($('input', day).val())
          $('calendar').toggle('collapse')
          window.location.href = '?date=' + inp.val()
          
          //var data = "id=" + $(":input:first", line).val() + "&authenticity_token=" + $("form:first :input[name^='auth']").val();
          // $.ajax({ type: "POST", url: "/order/cartdel", data: {} });
        });
        $(".btn-timeline").on("click", function() {
          // var day = $(this);
          $('calendar').toggle('collapse')
          // $.ajax({ type: "POST", url: "/order/cartdel", data: {} });
        });
        
        $(":input[name='save']").on("click", function(e) {
          var valid = true;
          var lines = $("tr.order-line");
          var amounts = $(":input[name*=done_amount]", lines);
          amounts.parents(".controls").removeClass("has-error");
          lines.each(function() {
            var a = $(":input[name*=done_amount]", this);
            var ignore = $(":input[name*=ignored]", this);
            if (ignore[1].checked && +a.val() > 0) {
              a.parents(".controls").addClass("has-error");
              valid = false;
            }
          });
          return valid;
        });
        
        $(".btn.print-all").on("click", function() {
          $("#for_order_tab .tab-pane.filled").removeClass("non-print")
          print()
        });

        // /document.addEventListener("DOMContentLoaded", function(event) {
        // var ax = document.querySelector('#stickers_tab').getBoundingClientRect().width
        // document.querySelector('#stickers_tab ul').scrollBy(ax, 0)
        var al = document.querySelector('#stickers_tab ul .active')
        if (al && al.nextElementSibling) al = al.nextElementSibling
        if (al) al.scrollIntoView(false)
        // })
        
      });
    })(jQuery);