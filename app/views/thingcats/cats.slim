.col-md-6.flex-c
  .flex-v = partial 'thingcats/menu', locals: { :a => :c }

  .flexie.block
    .text-center.title Категории
    .form-std.tmar-1: .control-group.controls.wp100
      deepdown display-id=@section.id data-url='aux/sections' fire='THC_DEEPDOWN_SELECT'
      deedselect listen='THC_DEEPDOWN_SELECT' url=url(:thingcats, :categories, s: '')

    .ted: table.table.table-hover
      - @categories.each do |category|
        tr.list-row data-rowid=category.id
          td.list-column
            = category.display
          td
            sub.tiny-text = category.sequ
          td.text-end
            a.btn-sm.btn-steel.fa.fa-pencil href=url(:thingcats, :category, :id => category.id)

.corners.c1.col-md-6: .c-panel
  - unless @category
    .text-center.title Создать категорию
  .tmar-2
    = form_for :supermodel, url(:thingcats, :category), class: 'form-std' do |f|
      - if @category
        = f.hidden_field :id, :name => :id
      fieldset.controls-inline.control-group
        = f.label :name, :class => 'control-label'
        .controls.wp100
          = f.text_field :name, :class => 'form-control input-large', required: true, :autocomplete => "off"
      fieldset.controls-inline.control-group
        = f.label :num, :class => 'control-label'
        .controls
          = f.text_field :snum, :class => 'form-control input-large', required: false, pattern: '[0-9]{1,4}',
            :autocomplete => "off", value: @category&.sn
      fieldset.control-group
        = f.label 'цех', :class => 'control-label'
        .controls.wp100
          deepdown display-id=@section.id data-url='aux/sections' data-name='ksm_category[section_id]'
      fieldset.control-group
        = f.label :category, :class => 'control-label'
        .controls.wp100
          deepdown-ms[
            display-id=@category&.category_id data-url='aux/categories'
            data-sid=@section.id data-name='ksm_category[category_id]' target='notfound'
          ]
      .form-actions.vmar-2 = f.submit :save, :class => 'btn btn-prime btn-sm btn-wide'

.clearfix

- content_for :js_assets do
  = javascript_include_tag :appa, :riot
  rscript type="riot/tag" src="/riot/tags/deepdown.tag"
  rscript type="riot/tag" src="/riot/tags/deepdown_ms.tag"
  rscript type="riot/tag" src="/riot/tags/things/deedselect.tag"
  rscript type="riot/tag" src="/riot/tags/switcher.tag"
  rscript type="riot/tag" src="/riot/tags/elhide.tag"
  rscript type="riot/tag" src="/riot/tags/shower.tag"
  rscript type="riot/tag" src="/riot/tags/prefs/bottom_works.tag"
  rscript type="riot/tag" src="/riot/tags/things/list.tag"
  rscript type="riot/tag" src="/riot/tags/prefs/dualpane.tag"
  rscript type="riot/tag" src="/riot/tags/prefs/selectload.tag"  

  javascript:
    
    document.addEventListener("DOMContentLoaded", function(event) {
      riot.mount('switcher, shower, bottomworks, elhide, list, deepdown-ms, deedselect, deepdown')
      let confobj = #{{@squadconf.to_json}}
      rsquad.saveConfig(confobj)
    })