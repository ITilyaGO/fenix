- error = @product.errors.include?(:name)
fieldset class='control-group#{error ? ' has-error' : ''}'
  = f.label :name, :class => 'control-label'
  .controls.wp100
    = f.text_field :name, :class => 'form-control input-large input-with-feedback', :required => true
fieldset class='control-group'
  = f.label "Город", :class => 'control-label'
  .controls.wp100
    div class="scrollable-dropdown-menu"
      = f.hidden_field :place_id
      = text_field_tag :kato_type, :class => 'form-control', :required => true, value: @kc_place&.model&.name
  .extra.controls
    = f.check_box :pit, value: 1, :class => 'twice-input', checked: @product.settings&.fetch(:pi, 0) == 1
    label.btn.btn-sm.btn-desert.twice-label(for = 'product_pit')
      .hold.fa.fa-circle-o.invisible
      .off.fa.fa-eye
      .on.fa.fa-circle-o
fieldset class='control-group#{error ? ' has-error' : ''}'
  = f.label :view, :class => 'control-label'
  .controls.wp100
    = f.text_field :look, :class => 'form-control input-large input-with-feedback'
  .extra.controls
    = f.check_box :nit, value: 1, :class => 'swap-input', checked: @product.settings&.fetch(:ni, nil) == 1
    label.btn.btn-sm.btn-desert.swap-label(for = 'product_nit')
      .fa.fa-adjust

/fieldset.control-group
  = f.label 'цех', :class => 'control-label'
  .controls
    - sections = Section.all.map{|a|[a.name, a.id, { selected: option_is_selected?(a.id, a.name, @product.category.category.section_id)}]}
    = f.select :brand_id, options: sections, class: "huge mbl"
/fieldset class='control-group#{error ? ' has-error' : ''}'
  = f.label :category, :class => 'control-label'
  .controls
    - grouped = {}
    - cats.each do |cat|
      - grouped[cat.name] = []
      - cat.subcategories.each do |sub|
        - opt = ["#{cat.name} – #{sub.name}", sub.id, { selected: option_is_selected?(sub.id, sub.name, @product.category_id) }]
        - grouped[cat.name] << opt
    = f.select :category_id, grouped_options: grouped, class: "huge mbl"

fieldset class='control-group#{error ? ' has-error' : ''}'
  = f.label 'цех', :class => 'control-label'
  .controls.wp100
    deepdown-ms display-id=@product.category.section_id data-url='aux/sections' target='sd'
  .extra
    a.btn.btn-sm.fa.fa-folder.btn-desert href=url(:thingcats, :sections)

fieldset class='control-group#{error ? ' has-error' : ''}'
  = f.label :category, :class => 'control-label'
  .controls.wp100
    deepdown-ms[
      display-id=@product.category_id data-url='aux/categories'
      data-sid=@product.category.section_id data-name='product[category_id]' listen='sd'
    ]
  .extra
    a.btn.btn-sm.fa.fa-folder.btn-desert href=url(:thingcats, :categories, s: @product&.category&.section_id)

- error = @product.errors.include?(:price)
fieldset class='control-group#{error ? ' has-error' : ''}'
  = f.label :price, :class => 'control-label'
  .controls
    = f.text_field :price, :class => 'form-control input-large input-with-feedback'
fieldset.control-group
  = f.label :sticker, :class => 'control-label'
  .controls: .form-control.ro.hand riot-tag='shower' data-classy='.stdims'
    == @xproduct.sticker > 0 ? rurk(@xproduct.sticker) : 'нет'
  .pll.spacer
  .controls.stdims.hide
    = text_field_tag :'raw[sticker]', value: @xproduct.sticker, :class => 'form-control input-large input-with-feedback'

- error = @product.errors.include?(:des)
fieldset class='control-group#{error ? ' has-error' : ''}'
  = f.label "артикул", :class => 'control-label'
  div class='controls'
    = f.text_field :art, :class => 'form-control input-large'
    / span class='help-inline' = error ? f.error_message_on(:des, :class => 'text-error') : pat(:example)
- error = @product.errors.include?(:des)
fieldset class='control-group#{error ? ' has-error' : ''}'
  = f.label :sku, :class => 'control-label'
  div class='controls'
    = f.text_field :sku, :class => 'form-control input-large', readonly: true, value: @product.autoart
- error = @product.errors.include?(:des)
fieldset class='control-group#{error ? ' has-error' : ''}'
  = f.label 'деколь', :class => 'control-label'
  div class='controls'
    = f.text_field :sketch, :class => 'form-control input-large', readonly: true, value: @product.sketch_ext
fieldset class='control-group#{error ? ' has-error' : ''}'
  = f.label 'собрание', :class => 'control-label'
  .controls.wp100
    = f.text_field :corel, :class => 'form-control input-large'
fieldset class='control-group#{error ? ' has-error' : ''}'
  = f.label 'скидка', :class => 'control-label'
  .controls
    = f.text_field :discount, :class => 'form-control input-large'
  .next
    | &nbsp;%
fieldset class='control-group#{error ? ' has-error' : ''}'
    = f.label "минимальный остаток", :class => 'control-label'
    div class='controls'
      = f.number_field :amount_trs, :class => 'form-control input-large'
    = f.label "заказ на производство", :class => 'control-label'
    div class='controls'
      = f.number_field :amount_req, :class => 'form-control input-large'


fieldset.control-group.tmar-2
  .controls.col-md-12.text-right
    .col-md-6: .btn.btn-link riot-tag='shower' data-classy='.pdims' Характеристики...
    .col-md-6: .btn.btn-link riot-tag='shower' data-classy='.wsdims' Сайт...

.col-md-12.row
  .pdims.col-md-6
    - error = @product.errors.include?(:weight)
    fieldset class='control-group#{error ? ' has-error' : ''}'
      = f.label "#{:weight} (kg)", :class => 'control-label'
      div class='controls'
        = f.text_field :dim_weight, :class => 'form-control input-large input-with-feedback'
        / span class='help-inline' = error ? f.error_message_on(:index, :class => 'text-error') : pat(:example)
    - error = @product.errors.include?(:height)
    fieldset class='control-group#{error ? ' has-error' : ''}'
      = f.label "#{:height} (cm)", :class => 'control-label'
      .controls
        = f.text_field :dim_height, :class => 'form-control input-large input-with-feedback'
      .extra
        .fa.fa-compass.text-info.prl
    fieldset class='control-group#{error ? ' has-error' : ''}'
      = f.label "#{:width} (cm)", :class => 'control-label'
      div class='controls'
        = f.text_field :dim_width, :class => 'form-control input-large input-with-feedback'
    fieldset class='control-group#{error ? ' has-error' : ''}'
      = f.label "#{:length} (cm)", :class => 'control-label'
      div class='controls'
        = f.text_field :dim_length, :class => 'form-control input-large input-with-feedback'

  .wsdims.col-md-6
    - error = @product.errors.include?(:weight)
    fieldset class='control-group#{error ? ' has-error' : ''}'
      = f.label :index, :class => 'control-label'
      .controls
        = f.text_field :windex, :class => 'form-control input-large input-with-feedback'
      .extra
        .fa.fa-compass.text-info.prl
    fieldset class='control-group#{error ? ' has-error' : ''}'
      = f.label 'кратность', :class => 'control-label'
      .controls
        = f.text_field :lotof, :class => 'form-control input-large'
      .extra
        .fa.fa-compass.text-info.prl
    fieldset class='control-group#{error ? ' has-error' : ''}'
      = f.label 'производство', :class => 'control-label'
      .controls
        = f.text_field :lotof_mfg, :class => 'form-control input-large'
    fieldset class='control-group#{error ? ' has-error' : ''}'
      = f.label :tag, :class => 'control-label'
      .controls
        = f.text_field :tagname, disabled: true, :class => 'form-control input-large input-with-feedback'
      .extra
        .fa.fa-compass.text-info.prl
.clearfix

.tmar-2
fieldset class='control-group#{error ? ' has-error' : ''}'
  = f.label "описание", :class => 'control-label'
  .controls.wp100
    = f.text_area :desc, :class => 'form-control input-large input-with-feedback'


    / span class='help-inline' = error ? f.error_message_on(:height, :class => 'text-error') : pat(:example)
        // = sub.id == @product.category_id ? "selected" : ""

- error = @product.errors.include?(:height)
fieldset class='control-group#{error ? ' has-error' : ''}'
  = f.label :barcode, :class => 'control-label'
  div class='controls'
    = f.text_field :barcode, :class => 'form-control input-large', value: @product.autobar

fieldset.control-group
  /= f.label :ean13, :class => 'control-label'
  .controls.text-center.wp100.tmar-2
    /# = f.label :ean13, :class => 'control-label'
    - barcode13 = Barby::EAN13.new(@product.autobar) rescue nil
    - if barcode13
      
      - File.open("public/barcode/#{@product.id}.svg", 'w'){|f| f.write barcode13.to_svg(margin: 0, foreground: '#565d5e') }
      .controls: .im = image_tag "/barcode/#{@product.id}.svg", style: 'height: 4ch;width: 30ch;'
    - else
      .controls: .fa.fa-exclamation-triangle.text-warning

- error = @product.errors.include?(:num_photos)
/fieldset class='control-group#{error ? ' has-error' : ''}'
  = f.label :num_photos, :class => 'control-label'
  div class='controls'
    = f.text_field :num_photos, :class => 'form-control input-large input-with-feedback'
    / span class='help-inline' = error ? f.error_message_on(:num_photos, :class => 'text-error') : "Не редактируйте это поле"
- error = @product.errors.include?(:active)
/fieldset class='control-group#{error ? ' has-error' : ''}'
  = f.label :active, :class => 'control-label'
  div class='controls'
    = f.text_field :active, :class => 'form-control input-large input-with-feedback'
    / span class='help-inline' = error ? f.error_message_on(:active, :class => 'text-error') : pat(:example)

/fieldset class='control-group#{error ? ' has-error' : ''}'
  = f.label :'1cn', :class => 'control-label'
  .controls.wp100
    = f.text_field :n1c, value: @xproduct[:n1c], :class => 'form-control input-large input-with-feedback'
/fieldset class='control-group#{error ? ' has-error' : ''}'
  = f.label :arn, :class => 'control-label'
  .controls.flex-c
    = f.text_field :arn, value: @xproduct[:arn], :class => 'form-control input-large input-with-feedback'
    /.fa.fa-anchor
    | &nbsp;
    - am = CabiePio.get([:product, :archetype_multi], @product.id).data
    - if am
      | &nbsp;&nbsp;&nbsp;
      sub.control-label x
      .form-control = am
/fieldset.control-group
  = f.label :sticker, :class => 'control-label'
  .controls: .form-control.ro == rurk CabiePio.get([:products, :sticker], @product.id).data

// = select_tag(:color, :include_blank => true, :grouped_options => [['warm',['red','yellow']],['cool',['blue', 'purple']]], :class => "select-block")
// = categories_tag("product[category_id]", :grouped_options => @cats, :class => "select-block", :selected => @product.category_id)

/ .form-actions
/   = f.submit pat(:save).downcase, :class => 'btn btn-sm btn-prime'
  /|&nbsp;
  /= f.submit pat(:save_and_continue), :class => 'btn btn-info', :name => 'save_and_continue'
  /|&nbsp;
  /= link_to pat(:cancel), url(:products, :index), :class => 'btn btn-default'