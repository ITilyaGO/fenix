
table class="table table-hover table-condensed non-print"
  thead
    tr
      th class='header non-print'
        = check_box_tag 'orders_all', :autocomplete => "off", :value => false, :class => 'list-selectable-checkbox-all'
      th class='header' Номер
      th.header
      th class='header' Дата
      th class='header' Отправка
      th class='header' Заказчик
      th class='header' Город
      / th class='header non-print' Тр.ком.
      / th class='header non-print' Договор
      th class='header non-print' Менеджер
      th.header width='50px'
      th class='header' Статус
      th class='header non-print'
        = partial 'bricks/orders/section_titles'
      th.only-print width="40%"
      th.non-print
      th class='header list-row-action-header non-print'
        ' Всего:
        rowsummer target='.table-condensed'

  tbody
    - @week_orders.each do |pair|
      - order = @orders.detect{|x| x.id == pair.last} || Order.holder(pair.last)
      / - odate = @week_orders.detect{|x|x.last == order.id}&.first
      - os = @kc_os.detect{|kc|kc.id.to_i == order.id} || KSM::OrderStatus.new(id: order.id)
      - next if (@abl_view & os.pstate.keys).empty?
      - odate = pair.first
      tr class='list-row non-print'
        td class='list-column list-selectable non-print' = check_box_tag 'order_ids[]', :autocomplete => "off", :value => order.id, :class => 'list-selectable-checkbox'
        td class='list-column' = "#{order.id}"
        td.list-column
          = tja :delivery, order.delivery
          | &nbsp;&nbsp;
        td.list-column.text-center.text-nowrap = to_dm(order.created_at)
        td.list-column.text-center.text-nowrap class=('date-warning' if @kc_blinks.fetch(order.id, nil))
          = to_dm(timeline_unf(odate))
        td class='list-column' = order.client.name
        td class='list-column'
          - code = @kc_orders[order.id.to_s]
          - town_name = @kc_towns[code]&.model
          = partial 'bricks/kato/label_print', :locals => { town_name: town_name, el: order }
        / td class='list-column non-print'
          = partial 'bricks/orders/transport', :locals => { client_id: order.client_id }
        / td class='list-column non-print' = order.client.contract
        td class='list-column text-center non-print'
          = order.client&.manager&.name
          - unless order.client&.manager_id
            .fa.fa-briefcase.text-danger
        td.list-column.minirur.text-nowrap
          == deli(rur ((my_order_total order)/1000.0).floor)
          |&nbsp;&nbsp;
          - if @current_account.is_admin?
            .icash.fa class=(@kc_cash.fetch(order.id, nil) ? 'fa-money' : 'fa-credit-card')
        td class='list-column'
          span.label.non-print class="label-#{os.state}" = t :"status.#{os.state}"
          span.only-print = t :"status.#{os.state}"
        td class='list-column non-print text-nowrap'
          = partial 'orders/squares', :locals => { :order => order }
        td.only-print
        td.non-print.list-column
          - progress = @kc_stickers.fetch(order.id, 0)
          .progress.short.for-stickers title="#{progress}%" class=('danger' if progress > 130)
            .progress-bar role="progressbar" style="width:#{progress.to_i}%"
        td class='list-column list-row-action non-print'
          div class='list-row-action-wrapper'
            = hidden_field_tag 'tid[]', :value => odate
            - if can_view?(:order, :modify)
              = link_to tag_icon(:calendar), '#', :class => 'list-row-action-wrapper-link medium list-menu-timeline-link'
            = link_to tag_icon(:edit), :href => url(:orders, :edit, :id => order.id), :class => 'list-row-action-wrapper-link'
 
  - if can_view_any_section?(:sections, :sum)
    - reveals = []
    - @orders.each do |order|
      - os = @kc_os.detect{|kc|kc.id.to_i == order.id} || KSM::OrderStatus.new(id: order.id)
      - next if (@abl_view & os.pstate.keys).empty?
      - reveals << order
    - @orders = reveals
    - all_ids = @orders.map(&:id)
    - price_total = @orders.map(&:total).sum
    - price_done = @orders.map(&:done_total).sum
    - cash_total = @orders.select{|o| @kc_cash.keys.include? o.id}.map(&:total).sum
    - cash_done = @orders.select{|o| @kc_cash.keys.include? o.id}.map(&:done_total).sum

    - sec_sums = sum_by_sections(all_ids)
    - sec_donea = sum_done_by_sections(all_ids)
    tfoot: tr: td.summary colspan=20
      - by_deli = my_sum_by_delivery(@orders)
      - [:postage, :vernissage, :roundtrip, :pickup].each do |ds|
        - if by_deli[ds] > 0
          .item-orders.pull-left
            span = tj :delivery, ds
            .rpr == deli(rur by_deli[ds])
      .pull-left
      - sections = KSM::Section.all
      - sections.each do |s|
        - next unless can_view_section?(:sections, :sum, s.ix)
        - sec_sum = sec_sums.fetch(s.ix, 0)
        - sec_done = sec_donea.fetch(s.ix, 0)
        - if sec_sum > 0
          .item-all.pull-left
            span
              = s.name
              |  #{((sec_done.to_f/sec_sum)*100).ceil rescue 0}%
            .rpr == deli(rur sec_sum)
            small == deli(rur sec_done)

      - if can_view_all?(:sections, :sum)
        .item-all.cashable.pull-right
          span Сумма заказов
          .rpr == deli(rur price_total)
          - if cash_total > 0
            .cashline
              small.rpr == deli(rur cash_total)
        .item-done.cashable.pull-right
          span Отправлено #{((price_done.to_f/price_total)*100).ceil}%
          .rpr == deli(rur price_done)
          - if cash_total > 0
            .cashline
              small.rpr == deli(rur cash_done)

      - if can_view_stickers?
        - stickers_done = @kc_sumstickers.values.sum
        - stickers_total = @stickers.values.sum
        .item-sticker.pull-right
          span Клейка
          .rpr == deli(rur all_ids.sum{|x|@stickers.fetch(x, 0)})
        .item-sticker.pull-right
          span Сделано #{((stickers_done.to_f/stickers_total)*100).ceil rescue 0}%
          .rpr == deli(rur stickers_done)

