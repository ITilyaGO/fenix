- @by_delivery.each do |del_id, man_orders|
  - del_name = t :"delivery.#{del_id}"
  .wrapper: table class="table table-hover table-condensed non-print"
    thead
      tr
        th class='header non-print'
          = check_box_tag 'orders_all', :autocomplete => "off", :value => false, :class => 'list-selectable-checkbox-all'
        th class='header' Номер
        th class='header' Заказчик
        th class='header' Город
        th.header width='50px'
        th class='header non-print' Тр.ком.
        th class='header non-print' Договор
        th class='header non-print' Дата
        th class='header non-print' Отправка
        th class='header non-print' Статус
        th class='header non-print'
          = partial 'bricks/orders/section_titles'
        th.only-print width="60%"
        th.non-print
        th class='header list-row-action-header non-print'
  
    tbody
      - man_orders.each do |order|
        - odate = @week_orders.detect{|x|x.last == order.id}&.first
        - os = @kc_os.detect{|kc|kc.id.to_i == order.id} || KSM::OrderStatus.new(id: order.id)
        - next if (@abl_view & os.pstate.keys).empty?
        tr class='list-row non-print'
          td class='list-column list-selectable non-print' = check_box_tag 'order_ids[]', :autocomplete => "off", :value => order.id, :class => 'list-selectable-checkbox'
          td class='list-column' = "#{order.id}"
          td class='list-column' = order.client.name
          td class='list-column'
            - code = @kc_orders[order.id.to_s]
            - town_name = @kc_towns[code]&.model
            = partial 'bricks/kato/label_print', :locals => { town_name: town_name, el: order }
          td.list-column.minirur.text-nowrap
              == deli(rur (order.total/1000.0).floor)
              |&nbsp;&nbsp;
              - if @current_account.is_admin?
                .icash.fa class=(@kc_cash.fetch(order.id, nil) ? 'fa-money' : 'fa-credit-card')
          td class='list-column non-print'
            = partial 'bricks/orders/transport', :locals => { client_id: order.client_id }
          td class='list-column non-print' = order.client.contract
          td.list-column.text-center.text-nowrap = to_dm(order.created_at)
          td.list-column.text-center.text-nowrap class=('date-warning' if @kc_blinks.fetch(order.id, nil))
            = to_dm(timeline_unf(odate))
          td class='list-column non-print'
            span.label.non-print class="label-#{os.state}" = t :"status.#{os.state}"
            span.only-print = t :"status.#{os.state}"
          td class='list-column non-print text-nowrap'
            = partial 'orders/squares', :locals => { :order => order }
          td.only-print
          td.non-print.list-column
            - progress = @kc_stickers.fetch(order.id, 0)
            .progress.short.for-stickers title="#{progress}%" class=('danger' if progress > 130)
              .progress-bar role="progressbar" style="width:#{progress.to_i}%"
          td class='list-column list-row-action non-print'
            div class='list-row-action-wrapper'
              = hidden_field_tag 'tid[]', :value => odate
              - if can_view?(:order, :modify)
                = link_to tag_icon(:calendar), '#', :class => 'list-row-action-wrapper-link medium list-menu-timeline-link'
                = link_to tag_icon(:'arrows-alt'), '#', :class => 'list-row-action-wrapper-link medium list-menu-regroup-link'
              = link_to tag_icon(:edit), :href => url(:orders, :edit, :id => order.id), :class => 'list-row-action-wrapper-link'

    tfoot: tr
      td.summary colspan=3
        .text-left = del_name
      td.summary colspan=20
        - if can_view_any_section?(:sections, :sum)
          - price_total = man_orders.map(&:total).sum
          - price_done = man_orders.map(&:done_total).sum
          - sec_sums = sum_by_sections(man_orders.map(&:id))
          - sec_dones = sum_done_by_sections(man_orders.map(&:id))
          - cash_total = man_orders.select{|o| @kc_cash.keys.include? o.id}.map(&:total).sum
          - cash_done = man_orders.select{|o| @kc_cash.keys.include? o.id}.map(&:done_total).sum
          .pull-left
          - sections = Section.all
          - sections.each do |s|
            - next unless can_view_section?(:sections, :sum, s.id)
            - sec_sum = sec_sums.fetch(s.id, 0)
            - sec_done = sec_dones.fetch(s.id, 0)
            - if sec_sum > 0
              .item-all.pull-left
                span
                  = s.name
                  |  #{((sec_done.to_f/sec_sum)*100).ceil rescue 0}%
                .rpr == deli(rur sec_sum)
                small == deli(rur sec_done)

          - if can_view_all?(:sections, :sum)
            .item-all.cashable.pull-right
              span Сумма заказов
              div == deli(rur price_total)
              - if cash_total > 0
                .cashline
                  small.rpr == deli(rur cash_total)
            .item-done.cashable.pull-right
              span Отправлено #{((price_done.to_f/price_total)*100).ceil}%
              div == deli(rur price_done)
              - if cash_total > 0
                .cashline
                  small.rpr == deli(rur cash_done)
          - if can_view_stickers?
            .item-sticker.pull-right
              span Клейка
              div == deli(rur man_orders.map(&:id).sum{|x|@stickers.fetch(x, 0)})
      
