- @weeks_select = @weeks[0..7]
- @weeks_select << { name: "Заказы без срока", date: nil }

ul class="nav nav-tabs non-print" id="weeks_tab"
  .btn.btn-xs.btn-abs.btn-default
    graphic.collapse
      - tempweek = Date.today.beginning_of_week
      - 7.times do |i|
        / .wday = tempweek.strftime('%^A').first
        .wday = Date::DAYNAMESRU[(i + Date::BOW) % 7]
        - tempweek += 1
    .fa.fa-btn.fa-circle
    | график

  - today = Date.today
  li
    graphic.collapse
      - 7.times do
        .invisible.day
    = link_to tag_icon('arrow-left'), url(:timeline, :weeks, start: timeline_id(@prev.prev_month.beginning_of_week + Date::BOW))
    
  - @weeks.each_with_index do |tab, i|
    li
      graphic.collapse
        - 7.times do |gap|
          - cdate = tab[:date] + gap
          /- r = rand(0..2)
          /.day class=[(:busy if r > 1), (:unbusy if r == 1)]
          / .day class=[(:busy if calendar_busy(cdate)), (:unbusy if calendar_unbusy(cdate))] title=cdate
          .day class=[timeline_busy?(cdate), ('today' if cdate == today)] title=cdate
      input type="hidden" name="weekno[]" value=timeline_id(tab[:date])
      = link_to tag_icon('fa fa-ok', "#{to_dm(tab[:date])}"), "#cat-#{i}", 'data-toggle' => "tab"

  - if @next < today
    li
      graphic.collapse
        - 7.times do
          .invisible.day
      = link_to tag_icon('arrow-right'), url(:timeline, :weeks, start: timeline_id(@prev.next_month.beginning_of_week + Date::BOW))
  - if (@prev.month-today.month).abs > 1
    li
      graphic.collapse
        - 7.times do
          .invisible.day
      = link_to tag_icon('history'), url(:timeline, :weeks)

.filters.non-print
  - if @current_account.is_admin?
    .filter-item style='line-height:2.2;'
      = link_to 'по месяцам', url(:timeline, :months), class: 'btn btn-xs btn-default'
  .filter-item.filter-control.custom-radio
    input type="radio" class="filter-control-input" id="customControlValidation1" name="radio-filter" value='delivery'
    label class="filter-control-label" for="customControlValidation1" по типу
  .filter-item.filter-control.custom-radio
    input type="radio" class="filter-control-input" id="customControlValidation2" name="radio-filter" value='date' checked="true"
    label class="filter-control-label" for="customControlValidation2" по дате
  .filter-item.filter-control.custom-radio
    input type="radio" class="filter-control-input" id="customControlValidation3" name="radio-filter" value='manager'
    label class="filter-control-label" for="customControlValidation3" по менеджеру

.modal#calendar-modal
  .modal-dialog style='width: 90% !important;'
    .modal-content
      = form_tag url(:timeline, :change), :method => :put do
        .modal-header
          h4.modal-title Переназначаем дату
        .modal-body
          = hidden_field_tag :timeline_id
          = hidden_field_tag :timeline_at
          = partial 'timeline/calendar_stick'
        .modal-footer
          / = submit_tag pat(:save), :class =>'list-row-action-popover-delete-one-btn btn btn-success btn-wide'
          .btn.btn-success.btn-wide.submit = pat(:save)
          .btn.btn-default.btn-wide.cancel data-dismiss="modal" = pat(:cancel)

.modal#regroup-modal
  .modal-dialog
    .modal-content
      = form_for :order, url(:orders, :regroup), :method => :put do |f|
        .modal-header
          h4.modal-title Тип заказа
        .modal-body
          = f.hidden_field :id
          / = f.hidden_field :delivery
          fieldset class='control-group'
            label.col-md-3.control-label
            .col-md-3.controls.custom-control
              = f.radio_button :delivery, :value => Order.deliveries[:vernissage], :class => 'custom-control-input'
              label.custom-control-label(for = 'order_delivery_3') = t :'delivery.vernissage'
            .col-md-3.controls.custom-control
              = f.radio_button :delivery, :value => Order.deliveries[:postage], :class => 'custom-control-input'
              label.custom-control-label(for = 'order_delivery_0') = t :'delivery.postage'
            .clearfix
            label.col-md-3.control-label
            .col-md-3.controls.custom-control
              = f.radio_button :delivery, :value => Order.deliveries[:roundtrip], :class => 'custom-control-input'
              label.custom-control-label(for = 'order_delivery_1') = t :'delivery.roundtrip'
            .col-md-3.controls.custom-control
              = f.radio_button :delivery, :value => Order.deliveries[:pickup], :class => 'custom-control-input'
              label.custom-control-label(for = 'order_delivery_2') = t :'delivery.pickup'

            / .col-md-3.controls.custom-control
            /   = radio_button_tag :delivery, :value => Order.deliveries[:vernissage], :class => 'custom-control-input'
            /   label.custom-control-label(for = 'order_delivery_3') = t :'delivery.vernissage'
            / .col-md-3.controls.custom-control
            /   = radio_button_tag :delivery, :value => Order.deliveries[:postage], :class => 'custom-control-input'
            /   label.custom-control-label(for = 'order_delivery_0') = t :'delivery.postage'
            / .clearfix
            / .col-md-3.controls.custom-control
            /   = radio_button_tag :delivery, :value => Order.deliveries[:roundtrip], :class => 'custom-control-input'
            /   label.custom-control-label(for = 'order_delivery_1') = t :'delivery.roundtrip'
            / .col-md-3.controls.custom-control
            /   = radio_button_tag :delivery, :value => Order.deliveries[:pickup], :class => 'custom-control-input'
            /   label.custom-control-label(for = 'order_delivery_2') = t :'delivery.pickup'
        .modal-footer
          .btn.btn-success.btn-wide.submit = pat(:save)
          .btn.btn-default.btn-wide.cancel data-dismiss="modal" = pat(:cancel)

.timeline.tab-content#for_weeks_tab
  .flex-c.center.page-loading.hidden
    .indicator
      i.fa.fa-circle-o-notch.fa-spin.fa-fw
      span.text Data Loading
      br
      span.url

  .output
    .text Hi
  
= form_for '', url(:dr_timeline, :orders), :class => 'form-page' do |f|

- content_for :js_assets do
  = javascript_include_tag :riot
  rscript type="riot/tag" src="/riot/tags/rowsummer.tag"
  rscript type="riot/tag" src="/riot/tags/timeline/stickamount.tag"

  javascript:
    // let confobj = #{{@squadconf.to_json}}
    // rsquad.saveConfig(confobj)

    (function($) {
      $(function() {
        $($('#weeks_tab li a')[2]).tab('show');
        if($($('#for_order_tab .tab-pane')[2]).not('.non-print').length > 0)
          $('#for_order_tab .tab-pane:first').addClass('last');
        $('#for_order_tab .tab-pane:not(.non-print):last').addClass('last');
  
        $(".list-selectable-checkbox").on("change", function() {
          $(this).parents(".list-row").toggleClass('non-print');
        });
        $(".list-selectable-checkbox-all").on("change", function() {
          var on = $(this).prop("checked")
          $(".list-selectable-checkbox").prop("checked", on);
          $(".tab-pane .list-row").toggleClass('non-print');
        });

        $("#weeks_tab .btn-abs").on("click", function() {
          
          // var on = $(this).prop("checked")
          // $(".list-selectable-checkbox").prop("checked", on);
          $("graphic").toggleClass('collapse')
        });

      });
    })(jQuery);

    (function() {
      function form_str(f, names) {
        return names.map(function(e) {
          let i = f.querySelector("[name=" + e + "]")
          let v = i.type == 'radio' ? f.querySelector("[name=" + e + "]:checked").value : i.value
          return e + "=" + v
        }).join('&')
      }

      function filters(f, names) {
        let p = document.querySelector('#weeks_tab .active input').value
        let s = document.querySelector('.filters input:checked').value
        return 'period=' + p + '&sort=' + s
      }

      function join_filters(p, s) {
        return 'period=' + p + '&sort=' + s
      }

      function no_href() {
        b = this
        o = document.querySelector('.output')
        f = document.querySelector('.form-page')
        palo = document.querySelector('.page-loading')
        loint = document.querySelector('.indicator .url')
        fetch(f.action, {
          method: 'PATCH',
          body: filters() + "&authenticity_token=" + encodeURIComponent(document.querySelector("form [name^=auth]").value),
          headers: { "Content-Type": "application/x-www-form-urlencoded" }
        })
        .then(response => response.text())
        .then(function(result) {
          o.innerHTML = result

          riot.mount('switcher, elhide, rowsummer, stickamount')

          $(".list-selectable-checkbox-all").on("change", function() {
            var on = $(this).prop("checked")
            $(".list-selectable-checkbox", $(this).parents("table")).prop("checked", on);
            $(".table .list-row").toggleClass('non-print');
            $(this).parents("table").toggleClass('non-print');
          });
          $(".list-selectable-checkbox").on("change", function() {
            $(this).parents(".list-row").toggleClass('non-print');
            $(this).parents("table").removeClass('non-print');
          });
          $(".list-menu-timeline-link").on("click", function(e) {
            var ps = []
            $('[name="place_ids[]"]:checked').each(function() {
              ps.push($(this).val())
            })
            $(':input[name=place_ids]').val(ps.join(','))
            $('calendar').toggle('collapse')
            $("#calendar-modal").modal()
            $('input[name="timeline_id"]').val(this.previousSibling.value)
          })
          $(".list-menu-regroup-link").on("click", function(e) {
            $("#regroup-modal").modal()
            var id = $('input:first', $(this).parents("tr")).val()
            $('input[name="order[id]"]').val(id)
          })
          o.classList.toggle('fade')
          palo.classList.toggle('hidden')
        })
        // o.innerHTML = 'Loading... ' + f.action
        // loint.innerHTML = f.action
        o.classList.toggle('fade')
        palo.classList.toggle('hidden')

        if ('URLSearchParams' in window) {
          var searchParams = new URLSearchParams(window.location.search)
          searchParams.set("start", document.querySelector('#weeks_tab .active input').value);
          var newRelativePathQuery = window.location.pathname + '?' + searchParams.toString();
          history.pushState(null, '', newRelativePathQuery);
        }
        return true
      }

      document.querySelectorAll('.filters .filter-item').forEach(function(b) {
        b.onchange = no_href
        // f = document.querySelector('.form-page')
        // f.onsubmit = function() { return false }

      })
      $('#weeks_tab li a').on('shown.bs.tab', no_href)

      $('#calendar-modal').on('hidden.bs.modal', function (e) {
        $('calendar .day').removeClass('selected')
        $('calendar').toggle('collapse')
      })
      $("calendar").on("click", ".day", function() {
        var day = $(this);
        let inp = $('input[name="timeline_at"]')
        inp.val($('input', day).val())
        $('calendar .day').removeClass('selected')
        day.toggleClass('selected')
      })
      
      $('#calendar-modal .submit').on('click', function (e) {
        id = $('input[name="timeline_id"]').val()
        at = $('input[name="timeline_at"]').val()
        f = document.querySelector('#calendar-modal form')
        fetch(f.action, {
          method: 'put',
          body: 'timeline_id=' + id + '&timeline_at=' + at + "&authenticity_token=" + encodeURIComponent(document.querySelector("form [name^=auth]").value),
          headers: { "Content-Type": "application/x-www-form-urlencoded" }
        })
        .then(response => response.text())
        .then(function(result) {})
        $('#calendar-modal').modal('hide')
        no_href()
      })

      $('#regroup-modal .submit').on('click', function (e) {
        f = document.querySelector('#regroup-modal form')
        fetch(f.action, {
          method: 'put',
          body: $(f).serialize(),
          headers: { "Content-Type": "application/x-www-form-urlencoded" }
        })
        .then(response => response.text())
        .then(function(result) {})
        $('#regroup-modal').modal('hide')
        no_href()
      })

      // document.querySelectorAll('#weeks_tab li a').forEach(function(b) {
      //   b.addEventListener("show.bs.tab", no_href)
      //   // b.onclick = no_href
      //   // f = document.querySelector('.form-page')
      //   // f.onsubmit = function() { return false }

      // })
    })()
